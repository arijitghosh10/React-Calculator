{"version":3,"sources":["components/Button.js","components/Output.js","components/Calculator.js","components/Convertor.js","App.js","index.js"],"names":["Button","symbol","num","color","btnClickHandler","bgcolor","className","onClick","style","gridColumn","background","Output","inputValue","answer","colour","backgroundColor","Calculator","useState","setInputValue","setAnswer","flag","setFlag","faSun","icon","setIcon","theme","setTheme","setBgColor","outputColor","setOutputColor","outputBgcolor","setOutputBgColor","addToInput","val","isNaN","length","slice","checkParanthesis","str","x","y","i","faMoon","updatedAns","join","math","input","Convertor","enteredVal","setEnteredVal","selectedUnit","setSelectedUnit","selectedOutputUnit","setSelectedOutputUnit","fromOptions","setFromOptions","Fragment","options","value","label","placeholder","onChange","event","type","min","target","isSearchable","convert","from","to","App","showConvertor","setShowConvertor","toggle","setToggle","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a2a8dc8b.chunk.js","sourcesContent":["import './Button.css';\r\nconst Button = ({ symbol, num, color, btnClickHandler, bgcolor }) => {\r\n    return (\r\n        <div className=\"button-wrapper\"\r\n            onClick={()=>{btnClickHandler(symbol)} }\r\n            style={{ gridColumn: `span ${num}` , color: color , background: bgcolor }}>\r\n            {symbol}\r\n        </div>\r\n    )\r\n}\r\nexport default Button;","import './Output.css';\r\nconst Output = ({ inputValue, answer, colour, bgcolor }) => {\r\n    return (\r\n        <div className=\"output-wrapper\"\r\n            style={{ backgroundColor: bgcolor, color: colour }}>\r\n            <div className=\"userInput\">\r\n                {inputValue}\r\n            </div>\r\n            <div className=\"result\">\r\n                {answer}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Output","import { useState } from 'react';\r\nimport Button from './Button';\r\nimport './Calculator.css';\r\nimport Output from './Output';\r\nimport * as math from \"mathjs\";\r\nimport { faMoon, faSun } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst Calculator = () => {\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n    const [answer, setAnswer] = useState(\"\");\r\n    const [flag, setFlag] = useState(0);\r\n    const [icon, setIcon] = useState(faSun)\r\n    const [theme, setTheme] = useState(\"#E8F0F2\");\r\n    const [bgcolor, setBgColor] = useState(\"black\");\r\n    const [outputColor, setOutputColor] = useState(\"#fffffe\");\r\n    const [outputBgcolor, setOutputBgColor] = useState(\"#000\");\r\n\r\n    const addToInput = (val) => {\r\n        if (inputValue === '' && (val === '+' || val === '/' || val === '*' || val === '%' || val === '^')) return;\r\n        if (val === 'sqrt') {\r\n            setInputValue(inputValue => [...inputValue, val + \"(\"])\r\n        } else {\r\n            if ((isNaN(+inputValue[inputValue.length - 1]) && inputValue[inputValue.length - 1] !== '(' && inputValue[inputValue.length - 1] !== ')' && inputValue[inputValue.length - 1] !== '^') && (val === '%' || val === '+' || val === '-' || val === '*' || val === '/' || val === '^')) {\r\n                setInputValue(inputValue => [...inputValue.slice(0, -1), val + \"\"])\r\n            } else {\r\n                setInputValue(inputValue => [...inputValue, val + \"\"])\r\n            }\r\n        }\r\n    }\r\n    const checkParanthesis = (str)=>{\r\n        let x=0,y=0;\r\n        for(let i=0;i<str.length;i++){\r\n            if(str[i]==='(') x++\r\n            else if(str[i]===')') y++\r\n        }\r\n        return (x!==y)\r\n    }\r\n    const calculate = () => {\r\n        setFlag(1)\r\n        if (inputValue === \"\") return;\r\n        if(inputValue[inputValue.length-1] === '+' || inputValue[inputValue.length-1] === '^' || inputValue[inputValue.length-1] === '+'|| inputValue[inputValue.length-1] === '*' || inputValue[inputValue.length-1] === '/' || inputValue[inputValue.length-1] === '-') return;\r\n        const input = inputValue.join(\"\")\r\n        if(checkParanthesis(input)){ \r\n            setAnswer(`=${math.evaluate(input + ')')}`)\r\n        }else{\r\n            setAnswer(`=${math.evaluate(input)}`)\r\n        }\r\n        if (input === \" \") {\r\n            setFlag(0)\r\n        }\r\n    }\r\n    const reset = () => {\r\n        setAnswer(\"\")\r\n        setInputValue(\"\")\r\n        setFlag(0)\r\n    }\r\n    const backspace = () => {\r\n        const updatedAns = inputValue.slice(0, -1)\r\n        setInputValue(updatedAns)\r\n        if (!isNaN(updatedAns[updatedAns.length - 1]) && flag === 1) {\r\n            if(checkParanthesis(updatedAns.join(\"\"))){ \r\n                setAnswer(`=${math.evaluate(updatedAns.join(\"\") + ')')}`)\r\n            }else{\r\n                setAnswer(`=${math.evaluate(updatedAns.join(\"\"))}`)\r\n            }\r\n        } else {\r\n            setAnswer('')\r\n        }\r\n    }\r\n    const themeHandler = () => {\r\n        if (theme === \"#E8F0F2\") {\r\n            setTheme(\"black\")\r\n        } else {\r\n            setTheme(\"#E8F0F2\")\r\n        }\r\n        if (bgcolor === \"black\") {\r\n            setBgColor(\"#E8F0F2\")\r\n        } else {\r\n            setBgColor(\"black\")\r\n        }\r\n        if (outputBgcolor === \"#000\") {\r\n            setOutputBgColor(\"#fffffe\")\r\n        } else {\r\n            setOutputBgColor(\"#000\")\r\n        }\r\n        if (outputColor === \"#fffffe\") {\r\n            setOutputColor(\"#000\")\r\n        } else {\r\n            setOutputColor(\"#fffffe\")\r\n        }\r\n        if (icon === faSun) {\r\n            setIcon(faMoon)\r\n        } else {\r\n            setIcon(faSun)\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"calculator\">\r\n            <button className=\"themeBtn\" onClick={themeHandler}>\r\n                Change Theme <FontAwesomeIcon icon={icon} />\r\n            </button>\r\n            <div className=\"calc-wrapper\">\r\n                <Output inputValue={inputValue} answer={answer} colour={outputColor} bgcolor={outputBgcolor} />\r\n                <div className=\"buttons\">\r\n                    <Button symbol=\"AC\" color=\"rgb(216, 32, 0)\" btnClickHandler={reset} bgcolor={bgcolor} />\r\n                    <Button symbol=\"Del\" color=\"rgb(216, 32, 0)\" btnClickHandler={backspace} bgcolor={bgcolor} />\r\n                    <Button symbol=\"(\" color=\"orange\" btnClickHandler={addToInput} bgcolor={bgcolor} />\r\n                    <Button symbol=\")\" color=\"orange\" btnClickHandler={addToInput} bgcolor={bgcolor} />\r\n                    <Button symbol=\"sqrt\" color=\"orange\" btnClickHandler={addToInput} bgcolor={bgcolor} />\r\n                    <Button symbol=\"^\" color=\"orange\" btnClickHandler={addToInput} bgcolor={bgcolor} />\r\n                    <Button symbol=\"%\" color=\"orange\" btnClickHandler={addToInput} bgcolor={bgcolor} />\r\n                    <Button symbol=\"+\" color=\"orange\" btnClickHandler={addToInput} bgcolor={bgcolor} />\r\n                    <Button symbol=\"7\" color={theme} btnClickHandler={addToInput} bgcolor={bgcolor} />\r\n                    <Button symbol=\"8\" color={theme} btnClickHandler={addToInput} bgcolor={bgcolor} />\r\n                    <Button symbol=\"9\" color={theme} btnClickHandler={addToInput} bgcolor={bgcolor} />\r\n                    <Button symbol=\"-\" color=\"orange\" btnClickHandler={addToInput} bgcolor={bgcolor} />\r\n                    <Button symbol=\"4\" color={theme} btnClickHandler={addToInput} bgcolor={bgcolor} />\r\n                    <Button symbol=\"5\" color={theme} btnClickHandler={addToInput} bgcolor={bgcolor} />\r\n                    <Button symbol=\"6\" color={theme} btnClickHandler={addToInput} bgcolor={bgcolor} />\r\n                    <Button symbol=\"*\" color=\"orange\" btnClickHandler={addToInput} bgcolor={bgcolor} />\r\n                    <Button symbol=\"1\" color={theme} btnClickHandler={addToInput} bgcolor={bgcolor} />\r\n                    <Button symbol=\"2\" color={theme} btnClickHandler={addToInput} bgcolor={bgcolor} />\r\n                    <Button symbol=\"3\" color={theme} btnClickHandler={addToInput} bgcolor={bgcolor} />\r\n                    <Button symbol=\"/\" color=\"orange\" btnClickHandler={addToInput} bgcolor={bgcolor} />\r\n                    <Button symbol=\".\" color={theme} btnClickHandler={addToInput} bgcolor={bgcolor} />\r\n                    <Button symbol=\"0\" color={theme} btnClickHandler={addToInput} bgcolor={bgcolor} />\r\n                    <Button symbol=\"=\" num=\"2\" color=\"rgb(216, 32, 0)\" btnClickHandler={calculate} bgcolor={bgcolor} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Calculator;","import React, { useState } from 'react';\r\nimport './Convertor.css';\r\nimport * as convert from 'convert-units';\r\nimport Select from 'react-select';\r\n\r\nconst Convertor = () => {\r\n    const [enteredVal, setEnteredVal] = useState('');\r\n    const [selectedUnit, setSelectedUnit] = useState('');\r\n    const [selectedOutputUnit, setSelectedOutputUnit] = useState('');\r\n    const [answer, setAnswer] = useState('')\r\n    const [fromOptions, setFromOptions] = useState([])\r\n    const unitOptions = [\r\n        { value: 'length', label: 'Length' },\r\n        { value: 'area', label: 'Area' },\r\n        { value: 'volume', label: 'Volume' },\r\n        { value: 'pressure', label: 'Pressure' },\r\n        { value: 'angle', label: 'Angle' },\r\n        { value: 'temp', label: 'Temperature' },\r\n        { value: 'VolFlow', label: 'Volume Flow Rate' },\r\n        { value: 'time', label: 'Time' }\r\n    ]\r\n\r\n    const changeConvertor = (event) => {\r\n        if (event.value === 'length') {\r\n            setFromOptions([\r\n                { value: 'in', label: 'Inches' },\r\n                { value: 'ft', label: 'Foot' },\r\n                { value: 'm', label: 'Metres' },\r\n                { value: 'km', label: 'Kilometre' },\r\n                { value: 'cm', label: 'Centimetre' },\r\n                { value: 'yd', label: 'Yard' },\r\n                { value: 'mm', label: 'Millimetre' },\r\n                { value: 'mi', label: 'Mile' }\r\n            ])\r\n        }\r\n        if (event.value === 'temp') {\r\n            setFromOptions([\r\n                { value: 'R', label: 'Rankine' },\r\n                { value: 'C', label: 'Celsius' },\r\n                { value: 'K', label: 'Kelvin' },\r\n                { value: 'F', label: 'Fahrenheit' }\r\n            ])\r\n        }\r\n        if (event.value === 'time') {\r\n            setFromOptions([\r\n                { value: 'ns', label: 'nanoseconds' },\r\n                { value: 'ms', label: 'milliseconds' },\r\n                { value: 's', label: 'seconds' },\r\n                { value: 'min', label: 'Minutes' },\r\n                { value: 'h', label: 'Hours' },\r\n                { value: 'd', label: 'Days' },\r\n                { value: 'week', label: 'Week' },\r\n                { value: 'month', label: 'Month' }\r\n            ])\r\n        }\r\n        if (event.value === 'area') {\r\n            setFromOptions([\r\n                { value: 'mm2', label: 'millimetre square' },\r\n                { value: 'cm2', label: 'centimetre square' },\r\n                { value: 'm2', label: 'metre square' },\r\n                { value: 'ha', label: 'hectare' },\r\n                { value: 'km2', label: 'kilometre square' },\r\n                { value: 'in2', label: 'square inch' },\r\n                { value: 'ft2', label: 'square foot' },\r\n                { value: 'ac', label: 'acre' }\r\n            ])\r\n        }\r\n        if (event.value === 'volume') {\r\n            setFromOptions([\r\n                { value: 'mm3', label: 'millimetre cube' },\r\n                { value: 'cm3', label: 'centimetre cube' },\r\n                { value: 'ml', label: 'millilitre' },\r\n                { value: 'l', label: 'litre' },\r\n                { value: 'kl', label: 'kilolitre' },\r\n                { value: 'm3', label: 'metre cube' },\r\n                { value: 'km3', label: 'Kilometre cube' },\r\n                { value: 'gal', label: 'Gallon' },\r\n                { value: 'tsp', label: 'Tea spoon' },\r\n                { value: 'Tbs', label: 'Table spoon' },\r\n                { value: 'cup', label: 'Cup' },\r\n                { value: 'in3', label: 'cubic inch' },\r\n                { value: 'ft3', label: 'cubic foot' }\r\n            ])\r\n        }\r\n        if (event.value === 'pressure') {\r\n            setFromOptions([\r\n                { value: 'Pa', label: 'Pascal' },\r\n                { value: 'bar', label: 'Bar' },\r\n                { value: 'torr', label: 'Torr' },\r\n                { value: 'psi', label: 'Pound per square inch' },\r\n                { value: 'ksi', label: 'Kilopound per square inch' },\r\n                { value: 'hPa', label: 'Hectopascal' },\r\n                { value: 'kPa', label: 'Kilopascal' },\r\n            ])\r\n        }\r\n        if (event.value === 'angle') {\r\n            setFromOptions([\r\n                { value: 'deg', label: 'Degree' },\r\n                { value: 'rad', label: 'Radian' },\r\n                { value: 'grad', label: 'Gradian' },\r\n                { value: 'arcmin', label: 'Arcsminute' },\r\n                { value: 'arcsec', label: 'Arcsecond' }\r\n            ])\r\n        }\r\n        if (event.value === 'VolFlow') {\r\n            setFromOptions([\r\n                { value: 'mm3/s', label: 'millimetrecube per sec' },\r\n                { value: 'cm3/s', label: 'centimetrecube per sec' },\r\n                { value: 'ml/s', label: 'millilitre per sec' },\r\n                { value: 'l/s', label: 'litre per sec' },\r\n                { value: 'kl/s', label: 'kilolitre per sec' },\r\n                { value: 'l/min', label: 'metre cube per minute' },\r\n                { value: 'kl/min', label: 'Kilometrecube per minute' },\r\n                { value: 'kl/h', label: 'Kilometrecube per hour' },\r\n                { value: 'm3/s', label: 'metrecube per sec' },\r\n                { value: 'm3/min', label: 'metrecube per minute' },\r\n                { value: 'Tbs/s', label: 'Tablespoon per sec' },\r\n                { value: 'tsp/s', label: 'Teaspoon per sec' },\r\n                { value: 'cup/s', label: 'cup per sec' },\r\n                { value: 'gal/min', label: 'gallon per minute' },\r\n                { value: 'gal/h', label: 'gallon per hour' },\r\n                { value: 'ft3/s', label: 'Cubicfoot per sec' },\r\n                { value: 'ft3/min', label: 'cubicfoot per minute' },\r\n                { value: 'yd3/s', label: 'cubicyard per sec' },\r\n                { value: 'yd3/min', label: 'cubicyard per minute' }\r\n            ])\r\n        }\r\n    }\r\n    const valChangeHandler = (event) => {\r\n        setEnteredVal(event.target.value)\r\n    }\r\n    const unitChangeHandler = (event) => {\r\n        setSelectedUnit(event.value)\r\n    }\r\n    const OutputUnitChangeHandler = (event) => {\r\n        setSelectedOutputUnit(event.value)\r\n    }\r\n    const resetHandler = () => {\r\n        setEnteredVal('')\r\n        setAnswer('')\r\n    }\r\n    const answerHandler = () => {\r\n        if (!selectedUnit || !selectedOutputUnit || enteredVal==='') return\r\n        setAnswer(convert(enteredVal).from(`${selectedUnit}`).to(`${selectedOutputUnit}`))\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"switchConvertor\">\r\n                <span>Choose a measurement</span>\r\n                <Select\r\n                    options={unitOptions}\r\n                    className=\"custom-select-measurement\"\r\n                    placeholder=\"Select a measurement\"\r\n                    onChange={changeConvertor} />\r\n            </div>\r\n            <div className=\"convertor\">\r\n                <div className=\"userInputDiv\">\r\n                    <h2>Enter a value</h2>\r\n                    <div className=\"select\">\r\n                        <input type=\"number\" min=\"0\" value={enteredVal} onChange={valChangeHandler} />\r\n                        <Select\r\n                            options={fromOptions}\r\n                            className=\"custom-select-unit\"\r\n                            placeholder=\"Select a unit\"\r\n                            onChange={unitChangeHandler}\r\n                            isSearchable />\r\n                    </div>\r\n                </div>\r\n                <div className=\"outputDiv\">\r\n                    <h2>Convert To</h2>\r\n                    <div className=\"select\">\r\n                        <Select\r\n                            options={fromOptions}\r\n                            className=\"custom-select-unit\"\r\n                            placeholder=\"Select a unit\"\r\n                            onChange={OutputUnitChangeHandler}\r\n                            isSearchable />\r\n                        <button className=\"go\" onClick={answerHandler}>Go!</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"answerDiv\">\r\n                    <div>\r\n                        <h2>Answer</h2>\r\n                        <div className=\"convertedValue\">{answer}</div>\r\n                    </div>\r\n                    <div className=\"resetBtn\">\r\n                        <button className=\"reset\" onClick={resetHandler}>Reset</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Convertor;","import React, { useState } from \"react\";\nimport './App.css'\nimport Calculator from \"./components/Calculator\";\nimport Convertor from \"./components/Convertor\";\n\nfunction App() {\n  const [showConvertor, setShowConvertor] = useState(false);\n  const [toggle, setToggle] = useState(false)\n  const switchHAndler = () => {\n    setShowConvertor(!showConvertor);\n    setToggle(!toggle)\n  }\n  return (\n    <div className=\"wrapper\">\n      <button className=\"switchBtn\" onClick={switchHAndler}>Switch to {toggle ? \"Calculator\" : \"Convertor\"}</button>\n      {!showConvertor && <Calculator />}\n      {showConvertor && <Convertor />}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n"],"sourceRoot":""}